{"apiDocsVersion":"1.0.0","docsData":{"releaseVersion":"","langLibs":[],"modules":[{"relatedModules":[],"records":[{"fields":[{"isDeprecated":false,"inclusionType":{"orgName":"ballerina","moduleName":"data.xmldata","version":"1.3.1","name":"ParticleOccurrence","description":"Define the configurations for min and max occurrences of members in the XML schema (XSD).","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":true,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"minOccurs","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0,"elementType":{"orgName":"ballerina","moduleName":"lang.int","version":"0.0.0","name":"Unsigned32","category":"libs","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":true,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}},{"name":"maxOccurs","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0,"elementType":{"orgName":"ballerina","moduleName":"lang.int","version":"0.0.0","name":"Unsigned32","category":"libs","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":true,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}}],"arrayDimensions":0},"isReadOnly":false}],"isClosed":true,"name":"ChoiceConfig","description":"Defines the configuration for an XML choice in the XML schema (XSD).\n","descriptionSections":[],"isDeprecated":false,"isReadOnly":false},{"fields":[{"isDeprecated":false,"inclusionType":{"orgName":"ballerina","moduleName":"data.xmldata","version":"1.3.1","name":"ParticleOccurrence","description":"Define the configurations for min and max occurrences of members in the XML schema (XSD).","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":true,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"minOccurs","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0,"elementType":{"orgName":"ballerina","moduleName":"lang.int","version":"0.0.0","name":"Unsigned32","category":"libs","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":true,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}},{"name":"maxOccurs","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0,"elementType":{"orgName":"ballerina","moduleName":"lang.int","version":"0.0.0","name":"Unsigned32","category":"libs","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":true,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}}],"arrayDimensions":0},"isReadOnly":false}],"isClosed":true,"name":"ElementConfig","description":"Defines the configuration for an XML element in the XML schema (XSD).\n","descriptionSections":[],"isDeprecated":false,"isReadOnly":false},{"fields":[{"defaultValue":"\"@\"","annotationAttachments":[],"type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"attributePrefix","description":"The prefix of JSON elements\u0027 key which is to be treated as an attribute in the XML representation\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"\"item\"","annotationAttachments":[],"type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"arrayEntryTag","description":"The name of the XML elements that represent a converted JSON array entry\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"()","annotationAttachments":[],"type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"rootTag","description":"The name of the root element of the XML that will be created. If its value is (), and the converted XML\nis not in the valid format, it will create a root tag as `root`\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"CONTENT","annotationAttachments":[],"type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"textFieldName","description":"field name for the text field\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"EMPTY_STRING","annotationAttachments":[],"type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"userAttributePrefix","description":"The prefix of JSON elements\u0027 key which used by the user to distinguish the attribute fields\n","isDeprecated":false,"isReadOnly":false}],"isClosed":true,"name":"JsonOptions","description":"Provides configurations for converting JSON to XML.\n","descriptionSections":[],"isDeprecated":false,"isReadOnly":false},{"fields":[{"defaultValue":"","annotationAttachments":[],"type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"value","description":"The name of the XML element\n","isDeprecated":false,"isReadOnly":false}],"isClosed":true,"name":"NameConfig","description":"Defines the name of the XML element.\n","descriptionSections":[],"isDeprecated":false,"isReadOnly":false},{"fields":[{"defaultValue":"","annotationAttachments":[],"type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"prefix","description":"The value of the prefix of the namespace\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","annotationAttachments":[],"type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"uri","description":"The value of the URI of the namespace\n","isDeprecated":false,"isReadOnly":false}],"isClosed":true,"name":"NamespaceConfig","description":"Defines the namespace of the XML element.\n","descriptionSections":[],"isDeprecated":false,"isReadOnly":false},{"fields":[{"defaultValue":"EMPTY_STRING","annotationAttachments":[],"type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"attributePrefix","description":"prefix added for attribute fields in the record\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"\"#content\"","annotationAttachments":[],"type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"textFieldName","description":"field name for the text field\n","isDeprecated":false,"isReadOnly":false}],"isClosed":true,"name":"Options","description":"Represent the options that can be used to modify the behaviour of projection.\n","descriptionSections":[],"isDeprecated":false,"isReadOnly":false},{"fields":[{"defaultValue":"","annotationAttachments":[],"type":{"orgName":"ballerina","moduleName":"lang.int","version":"0.0.0","name":"Unsigned32","category":"libs","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"minOccurs","description":"Specifies the minimum number of occurrences.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","annotationAttachments":[],"type":{"orgName":"ballerina","moduleName":"lang.int","version":"0.0.0","name":"Unsigned32","category":"libs","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"maxOccurs","description":"Specifies the maximum number of occurrences.\n","isDeprecated":false,"isReadOnly":false}],"isClosed":true,"name":"ParticleOccurrence","description":"Define the configurations for min and max occurrences of members in the XML schema (XSD).\n","descriptionSections":[],"isDeprecated":false,"isReadOnly":false},{"fields":[{"isDeprecated":false,"inclusionType":{"orgName":"ballerina","moduleName":"data.xmldata","version":"1.3.1","name":"ParticleOccurrence","description":"Define the configurations for min and max occurrences of members in the XML schema (XSD).","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":true,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"minOccurs","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0,"elementType":{"orgName":"ballerina","moduleName":"lang.int","version":"0.0.0","name":"Unsigned32","category":"libs","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":true,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}},{"name":"maxOccurs","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0,"elementType":{"orgName":"ballerina","moduleName":"lang.int","version":"0.0.0","name":"Unsigned32","category":"libs","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":true,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}}],"arrayDimensions":0},"isReadOnly":false}],"isClosed":true,"name":"SequenceConfig","description":"Defines the configuration for an XML sequence in the XML schema (XSD).\n","descriptionSections":[],"isDeprecated":false,"isReadOnly":false},{"fields":[{"defaultValue":"","annotationAttachments":[],"type":{"name":"int","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"value","description":"The element order in the sequence\n","isDeprecated":false,"isReadOnly":false}],"isClosed":true,"name":"SequenceOrderConfig","description":"Defines the configuration for the sequence order in the XML schema (XSD).\n","descriptionSections":[],"isDeprecated":false,"isReadOnly":false},{"fields":[{"isDeprecated":false,"inclusionType":{"orgName":"ballerina","moduleName":"data.xmldata","version":"1.3.1","name":"Options","description":"Represent the options that can be used to modify the behaviour of projection.","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":true,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"attributePrefix","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0,"elementType":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}},{"name":"textFieldName","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0,"elementType":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}}],"arrayDimensions":0},"isReadOnly":false},{"defaultValue":"true","annotationAttachments":[],"type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"allowDataProjection","description":"enable or disable projection\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"true","annotationAttachments":[],"type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"useSemanticEquality","description":"choose between semantic and syntactic equality\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"true","annotationAttachments":[],"type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"enableConstraintValidation","description":"enable or disable constraint validation\n","isDeprecated":false,"isReadOnly":false}],"isClosed":true,"name":"SourceOptions","description":"Represent the options that can be used to modify the behaviour of projection.\n","descriptionSections":[],"isDeprecated":false,"isReadOnly":false}],"classes":[],"objectTypes":[],"serviceTypes":[],"clients":[],"listeners":[],"functions":[{"accessor":"","resourcePath":"","isIsolated":true,"isRemote":false,"isResource":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"json","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"jsonValue","description":"The JSON source to be converted to XML\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"{}","annotationAttachments":[],"type":{"orgName":"ballerina","moduleName":"data.xmldata","version":"1.3.1","name":"JsonOptions","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"options","description":"The `xmldata:JsonOptions` record for JSON to XML conversion properties\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"xml","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"orgName":"ballerina","moduleName":"data.xmldata","version":"1.3.1","name":"Error","category":"errors","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0},"name":"","description":"XML representation of the given JSON if the JSON is successfully converted or else an `xmldata:Error`.\n","isDeprecated":false,"isReadOnly":false}],"annotationAttachments":[],"name":"fromJson","description":"Converts a JSON object to an XML representation.\n\n","descriptionSections":[],"isDeprecated":false,"isReadOnly":false},{"accessor":"","resourcePath":"","isIsolated":true,"isRemote":false,"isResource":false,"isExtern":true,"parameters":[{"defaultValue":"","type":{"name":"xml","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"v","description":"Source XML value \n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"{}","annotationAttachments":[],"type":{"orgName":"ballerina","moduleName":"data.xmldata","version":"1.3.1","name":"SourceOptions","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"options","description":"Options to be used for filtering in the projection\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"\u003c\u003e","annotationAttachments":[],"type":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":true,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0,"elementType":{"category":"inline_record","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}},"name":"t","description":"Target type to be used for filtering in the projection\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"t","category":"reference","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":false,"memberTypes":[],"arrayDimensions":0},{"orgName":"ballerina","moduleName":"data.xmldata","version":"1.3.1","name":"Error","category":"errors","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0},"name":"","description":"On success, returns the given target type value, else returns an `xmldata:Error` value\n","isDeprecated":false,"isReadOnly":false}],"annotationAttachments":[],"name":"parseAsType","description":"Converts XML to record type with projection.\n\n","descriptionSections":[],"isDeprecated":false,"isReadOnly":false},{"accessor":"","resourcePath":"","isIsolated":true,"isRemote":false,"isResource":false,"isExtern":true,"parameters":[{"defaultValue":"","type":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":true,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":1,"elementType":{"name":"byte","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}},"name":"s","description":"Source XML  byte[]\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"{}","annotationAttachments":[],"type":{"orgName":"ballerina","moduleName":"data.xmldata","version":"1.3.1","name":"SourceOptions","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"options","description":"Options to be used for filtering in the projection\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"\u003c\u003e","annotationAttachments":[],"type":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":true,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0,"elementType":{"category":"inline_record","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}},"name":"t","description":"Target type to be used for filtering in the projection\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"t","category":"reference","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":false,"memberTypes":[],"arrayDimensions":0},{"orgName":"ballerina","moduleName":"data.xmldata","version":"1.3.1","name":"Error","category":"errors","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0},"name":"","description":"On success, returns the given target type value, else returns an `xmldata:Error` value\n","isDeprecated":false,"isReadOnly":false}],"annotationAttachments":[],"name":"parseBytes","description":"Converts XML byte[] to record type with projection.\n\n","descriptionSections":[],"isDeprecated":false,"isReadOnly":false},{"accessor":"","resourcePath":"","isIsolated":true,"isRemote":false,"isResource":false,"isExtern":true,"parameters":[{"defaultValue":"","type":{"name":"stream","category":"stream","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":true,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":1,"elementType":{"name":"byte","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}},{"name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0},"name":"s","description":"Source XML byte-block-stream\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"{}","annotationAttachments":[],"type":{"orgName":"ballerina","moduleName":"data.xmldata","version":"1.3.1","name":"SourceOptions","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"options","description":"Options to be used for filtering in the projection\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"\u003c\u003e","annotationAttachments":[],"type":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":true,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0,"elementType":{"category":"inline_record","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}},"name":"t","description":"Target type to be used for filtering in the projection\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"t","category":"reference","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":false,"memberTypes":[],"arrayDimensions":0},{"orgName":"ballerina","moduleName":"data.xmldata","version":"1.3.1","name":"Error","category":"errors","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0},"name":"","description":"On success, returns the given target type value, else returns an `xmldata:Error` value\n","isDeprecated":false,"isReadOnly":false}],"annotationAttachments":[],"name":"parseStream","description":"Converts XML byte-block-stream to record type with projection.\n\n","descriptionSections":[],"isDeprecated":false,"isReadOnly":false},{"accessor":"","resourcePath":"","isIsolated":true,"isRemote":false,"isResource":false,"isExtern":true,"parameters":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"s","description":"Source XML string value\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"{}","annotationAttachments":[],"type":{"orgName":"ballerina","moduleName":"data.xmldata","version":"1.3.1","name":"SourceOptions","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"options","description":"Options to be used for filtering in the projection\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"\u003c\u003e","annotationAttachments":[],"type":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":true,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0,"elementType":{"category":"inline_record","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}},"name":"t","description":"Target type to be used for filtering in the projection\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"t","category":"reference","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":false,"memberTypes":[],"arrayDimensions":0},{"orgName":"ballerina","moduleName":"data.xmldata","version":"1.3.1","name":"Error","category":"errors","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0},"name":"","description":"On success, returns the given target type value, else returns an `xmldata:Error` value\n","isDeprecated":false,"isReadOnly":false}],"annotationAttachments":[],"name":"parseString","description":"Converts XML string to record type with projection.\n\n","descriptionSections":[],"isDeprecated":false,"isReadOnly":false},{"accessor":"","resourcePath":"","isIsolated":true,"isRemote":false,"isResource":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"map","category":"map","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0,"constraint":{"name":"anydata","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}},"name":"mapValue","description":"The `Map` or `Record` representation source to be converted to XML\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"{}","annotationAttachments":[],"type":{"orgName":"ballerina","moduleName":"data.xmldata","version":"1.3.1","name":"Options","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"options","description":"Options to be used for filtering in the projection\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"xml","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"orgName":"ballerina","moduleName":"data.xmldata","version":"1.3.1","name":"Error","category":"errors","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0},"name":"","description":"XML representation of the given source if the source is\nsuccessfully converted or else an `xmldata:Error`\n","isDeprecated":false,"isReadOnly":false}],"annotationAttachments":[],"name":"toXml","description":"Converts a `Map` or `Record` representation to its XML representation.\nAdditionally, when converting from a record, the `xmldata:Namespace`, `xmldata:Name`, and `xmldata:Attribute`\nannotations can be used to add `namespaces`, `name of elements`, and `attributes` to XML representation.\n\n","descriptionSections":[],"isDeprecated":false,"isReadOnly":false},{"accessor":"","resourcePath":"","isIsolated":false,"isRemote":false,"isResource":false,"isExtern":true,"parameters":[{"defaultValue":"","type":{"name":"xml","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"xmlValue","description":"The XML document that needs to be validated against the schema.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":true,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0,"elementType":{"category":"inline_record","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}}],"arrayDimensions":0},"name":"schema","description":"A string representing the file path to the `.xsd` file or a\nBallerina record type representing the schema defined by the XSD.\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"orgName":"ballerina","moduleName":"data.xmldata","version":"1.3.1","name":"Error","category":"errors","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"Returns `()` if the XML value is valid according to the schema, otherwise returns `Error`.\n","isDeprecated":false,"isReadOnly":false}],"annotationAttachments":[],"name":"validate","description":"Validates an XML document against an XML schema.\n\nThe schema can either be a file path to the `.xsd` file or a Ballerina record type that represents\nthe schema defined by the XSD. The function checks if the XML value conforms to the specified schema.\n\n","descriptionSections":[],"isDeprecated":false,"isReadOnly":false}],"constants":[],"annotations":[{"attachmentPoints":"record field","name":"Attribute","description":"The annotation is used to denote the field that is considered an attribute.\nWhen using `parseString`, `parseBytes`, `parseStream`, `parseAsType`, this annotation can be used to \nindicate the record field as an attribute.\nWhen using `toXml`, this annotation can be used to add the attribute to the XML element.\n","descriptionSections":[],"isDeprecated":false,"isReadOnly":false},{"type":{"orgName":"ballerina","moduleName":"data.xmldata","version":"1.3.1","name":"ChoiceConfig","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"attachmentPoints":"record field","name":"Choice","description":"Annotation to define schema rules for an XML choice in Ballerina.\n","descriptionSections":[],"isDeprecated":false,"isReadOnly":false},{"type":{"orgName":"ballerina","moduleName":"data.xmldata","version":"1.3.1","name":"ElementConfig","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"attachmentPoints":"record field","name":"Element","description":"Annotation to define schema rules for an XML element in Ballerina.\n","descriptionSections":[],"isDeprecated":false,"isReadOnly":false},{"type":{"orgName":"ballerina","moduleName":"data.xmldata","version":"1.3.1","name":"NameConfig","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"attachmentPoints":"type, record field","name":"Name","description":"The annotation is used to specify the new name of the existing record name or field name according to the XML format.\nWhen using `parseString`, `parseBytes`, `parseStream`, `parseAsType`, this annotation can be used to \nvalidate the name of the XML element with the record field or type.\nWhen using `toXml`, this annotation can be used to override the name of field or type.\n","descriptionSections":[],"isDeprecated":false,"isReadOnly":false},{"type":{"orgName":"ballerina","moduleName":"data.xmldata","version":"1.3.1","name":"NamespaceConfig","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"attachmentPoints":"type, record field","name":"Namespace","description":"The annotation is used to specify the namespace\u0027s prefix and URI of the XML element.\nWhen using `parseString`, `parseBytes`, `parseStream`, `parseAsType`, this annotation can be used to \nvalidate the namespace of the XML element with the record field or type.\nWhen using `toXml`, this annotation can be used to add the namespace to the XML element.\n","descriptionSections":[],"isDeprecated":false,"isReadOnly":false},{"type":{"orgName":"ballerina","moduleName":"data.xmldata","version":"1.3.1","name":"SequenceConfig","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"attachmentPoints":"record field","name":"Sequence","description":"Annotation to define schema rules for an XML sequence in Ballerina.\n","descriptionSections":[],"isDeprecated":false,"isReadOnly":false},{"type":{"orgName":"ballerina","moduleName":"data.xmldata","version":"1.3.1","name":"SequenceOrderConfig","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isOptional":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"attachmentPoints":"record field","name":"SequenceOrder","description":"Annotation to define schema rules for the sequence order in Ballerina.\n","descriptionSections":[],"isDeprecated":false,"isReadOnly":false}],"errors":[{"isDistinct":true,"name":"Error","description":"Represents the error type of the ballerina/data.xmldata module. This error type represents any error that can occur\nduring the execution of xmldata APIs.\n","descriptionSections":[],"isDeprecated":false,"isReadOnly":false}],"types":[],"unionTypes":[],"simpleNameReferenceTypes":[],"tupleTypes":[],"tableTypes":[],"mapTypes":[],"intersectionTypes":[],"typeDescriptorTypes":[],"functionTypes":[],"streamTypes":[],"arrayTypes":[],"anyDataTypes":[],"anyTypes":[],"stringTypes":[],"integerTypes":[],"decimalTypes":[],"xmlTypes":[],"booleanTypes":[],"enums":[],"variables":[],"configurables":[],"resources":[],"id":"data.xmldata","summary":"The Ballerina XML Data Library is a comprehensive toolkit designed to facilitate the handling and manipulation of XML data within Ballerina applications. It streamlines the process of converting XML data to native Ballerina data types, enabling developers to work with XML content seamlessly and efficiently.\n","description":"# Ballerina XML Data Library\n\nThe Ballerina XML Data Library is a comprehensive toolkit designed to facilitate the handling and manipulation of XML data within Ballerina applications. It streamlines the process of converting XML data to native Ballerina data types, enabling developers to work with XML content seamlessly and efficiently.\n\nThis library is the refined successor of the `ballerina/xmldata` module, incorporating enhanced functionalities and improved performance.\n\n## Features\n\n- **Versatile XML Data Input**: Accept XML data as a xml, a string, byte array, or a stream and convert it into a Record value.\n- **XML to Record Value Conversion**: Transform XML data into Ballerina records with ease in compliance with OpenAPI 3 standards.\n- **Projection Support**: Perform selective conversion of XML data subsets into Record values through projection.\n\n## Usage\n\n### Converting an XML value to a Record value\n\nTo convert an XML value to a Record value, you can utilize the `parseAsType` function provided by the library. The example below showcases the transformation of an XML value into a Record value.\n\n```ballerina\nimport ballerina/data.xmldata;\nimport ballerina/io;\n\npublic function main() returns error? {\n    xml data \u003d xml `\u003cbook\u003e\n        \u003cid\u003e0\u003c/id\u003e\n        \u003ctitle\u003estring\u003c/title\u003e\n        \u003cauthor\u003estring\u003c/author\u003e\n    \u003c/book\u003e`;\n\n    Book book \u003d check xmldata:parseAsType(data);\n    io:println(book);\n}\n\ntype Book record {\n    int id;\n    string title;\n    string author;\n};\n```\n\n### Converting an external XML document to a Record value\n\nFor transforming XML content from an external source into a Record value, the `parseString`, `parseBytes`, `parseStream` functions can be used. This external source can be in the form of a string or a byte array/byte-block-stream that houses the XML data. This is commonly extracted from files or network sockets. The example below demonstrates the conversion of an XML value from an external source into a Record value.\n\n```ballerina\nimport ballerina/data.xmldata;\nimport ballerina/io;\n\npublic function main() returns error? {\n    string xmlContent \u003d check io:fileReadString(\"path/to/file.xml\");\n    Book book \u003d check xmldata:parseString(xmlContent);\n    io:println(book);\n}\n\ntype Book record {\n    int id;\n    string title;\n    string author;\n};\n```\n\nMake sure to handle possible errors that may arise during the file reading or XML to record conversion process. The `check` keyword is utilized to handle these errors, but more sophisticated error handling can be implemented as per your requirements.\n\n## XML to Record Canonical Representation\n\nThe translation of XML to a Record representation is a fundamental feature of the library. It facilitates a structured and type-safe approach to handling XML data within Ballerina applications.\n\nTake for instance the following XML snippet:\n\n```xml\n\u003cbook\u003e\n    \u003cid\u003e601970\u003c/id\u003e\n    \u003ctitle\u003estring\u003c/title\u003e\n    \u003cauthor\u003estring\u003c/author\u003e\n\u003c/book\u003e\n```\n\nXML data is inherently hierarchical, forming a tree structure. In the given example, the root element is `book`, which encompasses three child elements: `id`, `title`, and `author`. The `id` element harbors a numeric value `0`, whereas both the `title` and `author` elements contain string values.\n\nA straightforward record representation of the above XML data is:\n\n```ballerina\ntype Book record {\n    int id;\n    string title;\n    string author;\n};\n```\n\nIn this representation, the XML data is efficiently translated into a record value. The `book` element is mapped to a record of type `Book`, and the child elements `id`, `title`, and `author` are converted into record fields of types `int` and `string` correspondingly.\n\nThis record type definition can be further refined through annotations. Moreover, utilizing open and closed records grants control over the translation process, which is elaborated in subsequent sections.\n\n### XML Element Names\n\nThe name of the XML element serves as the name of the record field, altered to fit a valid Ballerina identifier. Notably, the record field name corresponds to the local name of the XML element, with any namespace prefixes being disregarded.\n\nConsider the XML snippet:\n\n```xml\n\u003cbook\u003e\n    \u003cid\u003e601970\u003c/id\u003e\n    \u003ctitle-name\u003estring\u003c/title-name\u003e\n    \u003cauthor-name\u003estring\u003c/author-name\u003e\n\u003c/book\u003e\n```\n\nThe canonical representation of the above XML as a Ballerina record is:\n\n```ballerina\ntype Book record {\n    int id;\n    string title\\-name;\n    string author\\-name;\n};\n```\n\nObserve how the XML element names `title-name` and `author-name` are represented using delimited identifiers in Ballerina; the `-` characters in the XML element names are escaped using the `\\ ` character.\n\nMoreover, the `@Name` annotation can be utilized to explicitly specify the name of the record field, providing control over the translation process:\n\n```ballerina\nimport ballerina/data.xmldata;\n\ntype Book record {\n    int id;\n    @xmldata:Name { value: \"title-name\" }\n    string title;\n    @xmldata:Name { value: \"author-name\" }\n    string author;\n};\n```\n\n### XML Attributes\n\nSimilarly to XML elements, XML attributes are also represented into record fields within the corresponding parent Record type. The name of the XML attribute is converted into the name of the record field, ensuring it is a valid Ballerina identifier. It is crucial to emphasize that the record field name aligns with the local name of the XML attribute, and any namespace prefixes are ignored.\n\nConsider the following XML snippet:\n\n```xml\n\u003cbook lang\u003d\"en\" price\u003d\"10.5\"\u003e\n    \u003cid\u003e601970\u003c/id\u003e\n    \u003ctitle\u003estring\u003c/title\u003e\n    \u003cauthor\u003estring\u003c/author\u003e\n\u003c/book\u003e\n```\n\nThe canonical representation of the above XML as a Ballerina record is:\n\n```ballerina\ntype Book record {\n    string lang;\n    decimal price;\n    int id;\n    string title;\n    string author;\n};\n```\n\nAdditionally, the `@Attribute` annotation can be used to explicitly specify the field as an attribute providing control over the translation process. When element and attribute have same name in the same scope the priority is given to the element unless the expected record field has the `@Attribute` annotation.\n\n### Child Elements\n\nChild elements are mapped to record fields, with the type reflecting that of the corresponding child element.\n\nExamine the XML snippet below:\n\n```xml\n\u003cbook\u003e\n    \u003cid\u003e601970\u003c/id\u003e\n    \u003ctitle\u003estring\u003c/title\u003e\n    \u003cauthor\u003e\n        \u003cname\u003estring\u003c/name\u003e\n        \u003ccountry\u003estring\u003c/country\u003e\n    \u003c/author\u003e\n\u003c/book\u003e\n```\n\nThe canonical representation of the above XML as a Ballerina record is:\n\n```ballerina\ntype Book record {\n    int id;\n    string title;\n    Author author;\n};\n\ntype Author record {\n    string name;\n    string country;\n};\n```\n\nIn this transformation, child elements, like the `author` element containing its own sub-elements, are converted into nested records. This maintains the hierarchical structure of the XML data within the Ballerina type system, enabling intuitive and type-safe data manipulation.\n\nAlternatively, inline type definitions offer a compact method for representing child elements as records within their parent record. This approach is particularly beneficial when the child record does not require reuse elsewhere and is unique to its parent record.\n\nConsider the subsequent Ballerina record definition, which employs inline type definition for the `author` field:\n\n```ballerina\ntype Book record {\n    int id;\n    string title;\n    record {\n        string name;\n        string country;\n    } author;\n};\n```\n\n### XML Text Content\n\nThe transformation of XML text content into record fields typically involves types like `string`, `boolean`, `int`, `float`, or `decimal`, depending on the textual content. For numeric values where type information is not explicitly defined, the default conversion type is `decimal`. Conversely, for non-numeric content, the default type is `string`.\n\nConsider the XML snippet below:\n\n```xml\n\u003cbook\u003e\n    \u003cid\u003e601970\u003c/id\u003e\n    \u003ctitle\u003estring\u003c/title\u003e\n    \u003cauthor\u003estring\u003c/author\u003e\n    \u003cavailable\u003etrue\u003c/available\u003e\n    \u003cprice\u003e10.5\u003c/price\u003e\n\u003c/book\u003e\n```\n\nThe translation into a Ballerina record would be as follows:\n\n```ballerina\ntype Book record {\n    int id;\n    string title;\n    string author;\n    boolean available;\n    decimal price;\n};\n```\n\nIn scenarios where the parent XML element of text content also includes attributes, the XML text content can be represented by a `string` type field named `#content` within a record type, with the attributes being mapped to their respective fields.\n\nFor instance, examine this XML:\n\n```xml\n\u003cbook\u003e\n    \u003cid\u003e601970\u003c/id\u003e\n    \u003ctitle lang\u003d\"en\"\u003estring\u003c/title\u003e\n    \u003cprice\u003e10.5\u003c/price\u003e\n\u003c/book\u003e\n```\n\nThe canonical translation of XML to a Ballerina record is as such:\n\n```ballerina\ntype Book record {\n    int id;\n    Title title;\n    decimal price;\n};\n\ntype Title record {\n    string \\#content;\n    string lang;\n};\n```\n\n### XML Namespaces\n\nXML namespaces are accommodated by the library, supporting the translation of XML data that contains namespace prefixes. However, the presence of XML namespaces is not mandatory, and the library is capable of processing XML data without namespaces. Should namespaces be present, they will be utilized to resolve the names of XML elements and attributes.\n\nIt\u0027s important to note that, unlike in the `xmldata` module, the namespace prefixes do not reflect in the record field names, as the record field names align with the local names of the XML elements.\n\nExamine the XML snippet below with default namespaces:\n\n```xml\n\u003cbook xmlns\u003d\"http://example.com/book\"\u003e\n    \u003cid\u003e601970\u003c/id\u003e\n    \u003ctitle\u003estring\u003c/title\u003e\n    \u003cauthor\u003estring\u003c/author\u003e\n\u003c/book\u003e\n```\n\nThe translation into a Ballerina record would be:\n\n```ballerina\ntype Book record {\n    int id;\n    string title;\n    string author;\n};\n```\n\nIncorporating namespace validation yields:\n\n```ballerina\nimport ballerina/data.xmldata;\n\n@xmldata:Namespace {\n    uri: \"http://example.com/book\"\n}\ntype Book record {\n    int id;\n    string title;\n    string author;\n};\n```\n\nHere is the same XML snippet with a namespace prefix:\n\n```xml\n\u003cbk:book xmlns:bk\u003d\"http://example.com/book\"\u003e\n    \u003cbk:id\u003e601970\u003c/bk:id\u003e\n    \u003cbk:title\u003estring\u003c/bk:title\u003e\n    \u003cbk:author\u003estring\u003c/bk:author\u003e\n\u003c/bk:book\u003e\n```\n\nThe translation into a Ballerina record would be:\n\n```ballerina\nimport ballerina/data.xmldata;\n\n@xmldata:Namespace {\n    prefix: \"bk\",\n    uri: \"http://example.com/book\"\n}\ntype Book record {|\n    @xmldata:Namespace {\n        prefix: \"bk\",\n        uri: \"http://example.com/book\"\n    }\n    int id;\n    @xmldata:Namespace {\n        prefix: \"bk\",\n        uri: \"http://example.com/book\"\n    }\n    string title;\n    @xmldata:Namespace {\n        prefix: \"bk\",\n        uri: \"http://example.com/book\"\n    }\n    string author;\n|};\n```\n\nHere is the same XML snippet with a namespace prefix:\n\n```xml\n\u003cbk:book xmlns:bk\u003d\"http://example.com/book\" xmlns:au\u003d\"http://example.com/author\"\u003e\n    \u003cbk:id\u003e601970\u003c/bk:id\u003e\n    \u003cbk:title\u003estring\u003c/bk:title\u003e\n    \u003cau:author\u003estring\u003c/au:author\u003e\n\u003c/bk:book\u003e\n```\n\nThe translation into a Ballerina record would be:\n\n```ballerina\nimport ballerina/data.xmldata;\n\n@xmldata:Namespace {\n    uri: \"http://example.com/book\",\n    prefix: \"bk\"\n}\ntype Book record {|\n    @xmldata:Namespace {\n        uri: \"http://example.com/book\",\n        prefix: \"bk\"\n    }\n    int id;\n    @xmldata:Namespace {\n        uri: \"http://example.com/book\",\n        prefix: \"bk\"\n    }\n    string title;\n    @xmldata:Namespace {\n        uri: \"http://example.com/author\",\n        prefix: \"au\"\n    }\n    string author;\n|};\n```\n\nIn these examples, the XML namespaces are appropriately acknowledged, ensuring the integrity of the XML structure within the Ballerina records.\n\n### Working with Arrays\n\nThe library is equipped to handle the transformation of XML data containing arrays into Ballerina records.\n\nTake the following XML snippet as an example:\n\n```xml\n\u003cbook\u003e\n    \u003cid\u003e601970\u003c/id\u003e\n    \u003ctitle\u003estring\u003c/title\u003e\n    \u003cauthor\u003estring\u003c/author\u003e\n    \u003cauthor\u003estring\u003c/author\u003e\n    \u003cauthor\u003estring\u003c/author\u003e\n\u003c/book\u003e\n```\n\nThe canonical representation of this XML as a Ballerina record is:\n\n```ballerina\ntype Book record {\n    int id;\n    string title;\n    string[] author;\n};\n```\n\n### Controlling Which Elements to Convert\n\nThe library allows for selective conversion of XML elements into records through the use of rest fields. This is beneficial when the XML data contains elements that are not necessary to be transformed into record fields.\n\nTake this XML snippet as an example:\n\n```xml\n\u003cbook lang\u003d\"en\"\u003e\n    \u003cid\u003e601970\u003c/id\u003e\n    \u003ctitle lang\u003d\"en\"\u003estring\u003c/title\u003e\n    \u003cauthor\u003estring\u003c/author\u003e\n    \u003cprice\u003e10.5\u003c/price\u003e\n\u003c/book\u003e\n```\n\nSuppose that only the book `id`, and `title` elements are needed for conversion into record fields. This can be achieved by defining only the required fields in the record type and omitting the rest field:\n\n```ballerina\ntype Book record {|\n    int id;\n    string title;\n|};\n```\n\nHowever, if the rest field is utilized (or if the record type is defined as an open record), all elements in the XML data will be transformed into record fields:\n\n```ballerina\ntype Book record {\n    int id;\n    string title;\n};\n```\n\nIn this instance, all other elements in the XML data, such as `author` and `price` along with their attributes, will be transformed into `string` type fields with the corresponding element name as the key.\n\nThis behavior extends to arrays as well.\n\nThe process of projecting XML data into a record supports various use cases, including the filtering out of unnecessary elements. This functionality is anticipated to be enhanced in the future to accommodate more complex scenarios, such as filtering values based on regular expressions, among others.\n","orgName":"ballerina","version":"1.3.1","isDefaultModule":true}]},"searchData":{"modules":[{"id":"data.xmldata","description":"The Ballerina XML Data Library is a comprehensive toolkit designed to facilitate the handling and manipulation of XML data within Ballerina applications. It streamlines the process of converting XML data to native Ballerina data types, enabling developers to work with XML content seamlessly and efficiently.\n","orgName":"ballerina","version":"1.3.1","isDefaultModule":true}],"classes":[],"functions":[{"id":"fromJson","description":"Converts a JSON object to an XML representation.\n\n","moduleId":"data.xmldata","moduleOrgName":"ballerina","moduleVersion":"1.3.1"},{"id":"parseAsType","description":"Converts XML to record type with projection.\n\n","moduleId":"data.xmldata","moduleOrgName":"ballerina","moduleVersion":"1.3.1"},{"id":"parseBytes","description":"Converts XML byte[] to record type with projection.\n\n","moduleId":"data.xmldata","moduleOrgName":"ballerina","moduleVersion":"1.3.1"},{"id":"parseStream","description":"Converts XML byte-block-stream to record type with projection.\n\n","moduleId":"data.xmldata","moduleOrgName":"ballerina","moduleVersion":"1.3.1"},{"id":"parseString","description":"Converts XML string to record type with projection.\n\n","moduleId":"data.xmldata","moduleOrgName":"ballerina","moduleVersion":"1.3.1"},{"id":"toXml","description":"Converts a `Map` or `Record` representation to its XML representation.\nAdditionally, when converting from a record, the `xmldata:Namespace`, `xmldata:Name`, and `xmldata:Attribute`\nannotations can be used to add `namespaces`, `name of elements`, and `attributes` to XML representation.\n\n","moduleId":"data.xmldata","moduleOrgName":"ballerina","moduleVersion":"1.3.1"},{"id":"validate","description":"Validates an XML document against an XML schema.\n\nThe schema can either be a file path to the `.xsd` file or a Ballerina record type that represents\nthe schema defined by the XSD. The function checks if the XML value conforms to the specified schema.\n\n","moduleId":"data.xmldata","moduleOrgName":"ballerina","moduleVersion":"1.3.1"}],"records":[{"id":"ChoiceConfig","description":"Defines the configuration for an XML choice in the XML schema (XSD).\n","moduleId":"data.xmldata","moduleOrgName":"ballerina","moduleVersion":"1.3.1"},{"id":"ElementConfig","description":"Defines the configuration for an XML element in the XML schema (XSD).\n","moduleId":"data.xmldata","moduleOrgName":"ballerina","moduleVersion":"1.3.1"},{"id":"JsonOptions","description":"Provides configurations for converting JSON to XML.\n","moduleId":"data.xmldata","moduleOrgName":"ballerina","moduleVersion":"1.3.1"},{"id":"NameConfig","description":"Defines the name of the XML element.\n","moduleId":"data.xmldata","moduleOrgName":"ballerina","moduleVersion":"1.3.1"},{"id":"NamespaceConfig","description":"Defines the namespace of the XML element.\n","moduleId":"data.xmldata","moduleOrgName":"ballerina","moduleVersion":"1.3.1"},{"id":"Options","description":"Represent the options that can be used to modify the behaviour of projection.\n","moduleId":"data.xmldata","moduleOrgName":"ballerina","moduleVersion":"1.3.1"},{"id":"ParticleOccurrence","description":"Define the configurations for min and max occurrences of members in the XML schema (XSD).\n","moduleId":"data.xmldata","moduleOrgName":"ballerina","moduleVersion":"1.3.1"},{"id":"SequenceConfig","description":"Defines the configuration for an XML sequence in the XML schema (XSD).\n","moduleId":"data.xmldata","moduleOrgName":"ballerina","moduleVersion":"1.3.1"},{"id":"SequenceOrderConfig","description":"Defines the configuration for the sequence order in the XML schema (XSD).\n","moduleId":"data.xmldata","moduleOrgName":"ballerina","moduleVersion":"1.3.1"},{"id":"SourceOptions","description":"Represent the options that can be used to modify the behaviour of projection.\n","moduleId":"data.xmldata","moduleOrgName":"ballerina","moduleVersion":"1.3.1"}],"constants":[],"errors":[{"id":"Error","description":"Represents the error type of the ballerina/data.xmldata module. This error type represents any error that can occur\nduring the execution of xmldata APIs.\n","moduleId":"data.xmldata","moduleOrgName":"ballerina","moduleVersion":"1.3.1"}],"types":[],"clients":[],"listeners":[],"annotations":[{"id":"Attribute","description":"The annotation is used to denote the field that is considered an attribute.\nWhen using `parseString`, `parseBytes`, `parseStream`, `parseAsType`, this annotation can be used to \nindicate the record field as an attribute.\nWhen using `toXml`, this annotation can be used to add the attribute to the XML element.\n","moduleId":"data.xmldata","moduleOrgName":"ballerina","moduleVersion":"1.3.1"},{"id":"Choice","description":"Annotation to define schema rules for an XML choice in Ballerina.\n","moduleId":"data.xmldata","moduleOrgName":"ballerina","moduleVersion":"1.3.1"},{"id":"Element","description":"Annotation to define schema rules for an XML element in Ballerina.\n","moduleId":"data.xmldata","moduleOrgName":"ballerina","moduleVersion":"1.3.1"},{"id":"Name","description":"The annotation is used to specify the new name of the existing record name or field name according to the XML format.\nWhen using `parseString`, `parseBytes`, `parseStream`, `parseAsType`, this annotation can be used to \nvalidate the name of the XML element with the record field or type.\nWhen using `toXml`, this annotation can be used to override the name of field or type.\n","moduleId":"data.xmldata","moduleOrgName":"ballerina","moduleVersion":"1.3.1"},{"id":"Namespace","description":"The annotation is used to specify the namespace\u0027s prefix and URI of the XML element.\nWhen using `parseString`, `parseBytes`, `parseStream`, `parseAsType`, this annotation can be used to \nvalidate the namespace of the XML element with the record field or type.\nWhen using `toXml`, this annotation can be used to add the namespace to the XML element.\n","moduleId":"data.xmldata","moduleOrgName":"ballerina","moduleVersion":"1.3.1"},{"id":"Sequence","description":"Annotation to define schema rules for an XML sequence in Ballerina.\n","moduleId":"data.xmldata","moduleOrgName":"ballerina","moduleVersion":"1.3.1"},{"id":"SequenceOrder","description":"Annotation to define schema rules for the sequence order in Ballerina.\n","moduleId":"data.xmldata","moduleOrgName":"ballerina","moduleVersion":"1.3.1"}],"objectTypes":[],"enums":[]}}